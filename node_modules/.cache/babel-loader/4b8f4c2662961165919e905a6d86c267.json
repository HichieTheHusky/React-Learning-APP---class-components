{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Documents\\\\GitHub\\\\React-Learning-APP---class-components\\\\src\\\\components\\\\UserFinder.js\";\nimport { Component, Fragment, useState, useEffect } from \"react\";\nimport classes from \"./UserFinder.module.css\";\nimport Users from \"./Users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: \"u1\",\n  name: \"Max\"\n}, {\n  id: \"u2\",\n  name: \"Manuel\"\n}, {\n  id: \"u3\",\n  name: \"Julie\"\n}];\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n\n    this.searchChangeHandler = event => {\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n\n    this.state = {\n      filteredUsers: DUMMY_USERS,\n      searchTerm: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  return() {\n    /*#__PURE__*/\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.nind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  }\n\n} // const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n//   return (\n//     <Fragment>\n//       <div className={classes.finder}>\n//         <input type=\"search\" onChange={searchChangeHandler} />{\" \"}\n//       </div>\n//       <Users users={filteredUsers} />\n//     </Fragment>\n//   );\n// };\n\n\nexport default UserFinder;","map":{"version":3,"sources":["C:/Users/lukas/Documents/GitHub/React-Learning-APP---class-components/src/components/UserFinder.js"],"names":["Component","Fragment","useState","useEffect","classes","Users","DUMMY_USERS","id","name","UserFinder","constructor","searchChangeHandler","event","setState","searchTerm","target","value","state","filteredUsers","componentDidUpdate","prevProps","prevState","filter","user","includes","return","finder","nind"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAHkB,CAApB;;AAMA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AACjCU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,mBAdc,GAcSC,KAAD,IAAW;AAC/B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACD,KAhBa;;AAEZ,SAAKC,KAAL,GAAa;AAAEC,MAAAA,aAAa,EAAEZ,WAAjB;AAA8BQ,MAAAA,UAAU,EAAE;AAA1C,KAAb;AACD;;AACDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAID,SAAS,CAACN,UAAV,KAAyB,KAAKG,KAAL,CAAWH,UAAxC,EAAoD;AAClD,WAAKD,QAAL,CAAc;AACZK,QAAAA,aAAa,EAAEZ,WAAW,CAACgB,MAAZ,CAAoBC,IAAD,IAChCA,IAAI,CAACf,IAAL,CAAUgB,QAAV,CAAmB,KAAKP,KAAL,CAAWH,UAA9B,CADa;AADH,OAAd;AAKD;AACF;;AAKDW,EAAAA,MAAM,GAAG;AACP;AAAA,YAAC,QAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAErB,OAAO,CAACsB,MAAxB;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKf,mBAAL,CAAyBgB,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,EACyE,GADzE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD;;AAzBgC,C,CA4BnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,UAAf","sourcesContent":["import { Component, Fragment, useState, useEffect } from \"react\";\r\nimport classes from \"./UserFinder.module.css\";\r\n\r\nimport Users from \"./Users\";\r\nconst DUMMY_USERS = [\r\n  { id: \"u1\", name: \"Max\" },\r\n  { id: \"u2\", name: \"Manuel\" },\r\n  { id: \"u3\", name: \"Julie\" },\r\n];\r\n\r\nclass UserFinder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { filteredUsers: DUMMY_USERS, searchTerm: \"\" };\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.searchTerm !== this.state.searchTerm) {\r\n      this.setState({\r\n        filteredUsers: DUMMY_USERS.filter((user) =>\r\n          user.name.includes(this.state.searchTerm)\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  searchChangeHandler = (event) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n  };\r\n  return() {\r\n    <Fragment>\r\n      <div className={classes.finder}>\r\n        <input type=\"search\" onChange={this.searchChangeHandler.nind(this)} />{\" \"}\r\n      </div>\r\n      <Users users={this.state.filteredUsers} />\r\n    </Fragment>;\r\n  }\r\n}\r\n\r\n// const UserFinder = () => {\r\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     setFilteredUsers(\r\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n//     );\r\n//   }, [searchTerm]);\r\n\r\n//   const searchChangeHandler = (event) => {\r\n//     setSearchTerm(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <div className={classes.finder}>\r\n//         <input type=\"search\" onChange={searchChangeHandler} />{\" \"}\r\n//       </div>\r\n//       <Users users={filteredUsers} />\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\nexport default UserFinder;\r\n"]},"metadata":{},"sourceType":"module"}