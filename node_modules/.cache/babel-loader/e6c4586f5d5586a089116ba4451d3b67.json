{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Documents\\\\GitHub\\\\React-Learning-APP---class-components\\\\src\\\\components\\\\UserFinder.js\";\nimport { Component, Fragment, useState, useEffect } from \"react\";\nimport classes from \"./UserFinder.module.css\";\nimport UsersContext from \"../store/users-context\";\nimport Users from \"./Users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n\n    this.searchChangeHandler = event => {\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n\n    console.log(this.context);\n    this.state = {\n      filteredUsers: this.context.users,\n      searchTerm: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      filteredUsers: this.context.users\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n//   return (\n//     <Fragment>\n//       <div className={classes.finder}>\n//         <input type=\"search\" onChange={searchChangeHandler} />{\" \"}\n//       </div>\n//       <Users users={filteredUsers} />\n//     </Fragment>\n//   );\n// };\n\n\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"sources":["C:/Users/lukas/Documents/GitHub/React-Learning-APP---class-components/src/components/UserFinder.js"],"names":["Component","Fragment","useState","useEffect","classes","UsersContext","Users","UserFinder","constructor","searchChangeHandler","event","setState","searchTerm","target","value","console","log","context","state","filteredUsers","users","componentDidMount","componentDidUpdate","prevProps","prevState","filter","user","name","includes","render","finder","bind","contextType"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAGjCQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAmBdC,mBAnBc,GAmBSC,KAAD,IAAW;AAC/B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACD,KArBa;;AAEZC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,OAAjB;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,aAAa,EAAE,KAAKF,OAAL,CAAaG,KAA9B;AAAqCR,MAAAA,UAAU,EAAE;AAAjD,KAAb;AACD;;AACDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,QAAL,CAAc;AAAEQ,MAAAA,aAAa,EAAE,KAAKF,OAAL,CAAaG;AAA9B,KAAd;AACD;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACZ,UAAV,KAAyB,KAAKM,KAAL,CAAWN,UAAxC,EAAoD;AAClD,WAAKD,QAAL,CAAc;AACZQ,QAAAA,aAAa,EAAE,KAAKF,OAAL,CAAaG,KAAb,CAAmBK,MAAnB,CAA2BC,IAAD,IACvCA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAKV,KAAL,CAAWN,UAA9B,CADa;AADH,OAAd;AAKD;AACF;;AAKDiB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,MAAxB;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKrB,mBAAL,CAAyBsB,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,EACyE,GADzE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAlCgC,C,CAqCnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA3DMZ,U,CACGyB,W,GAAc3B,Y;AA4DvB,eAAeE,UAAf","sourcesContent":["import { Component, Fragment, useState, useEffect } from \"react\";\r\nimport classes from \"./UserFinder.module.css\";\r\nimport UsersContext from \"../store/users-context\";\r\n\r\nimport Users from \"./Users\";\r\n\r\nclass UserFinder extends Component {\r\n  static contextType = UsersContext;\r\n\r\n  constructor() {\r\n    super();\r\n    console.log(this.context);\r\n    this.state = { filteredUsers: this.context.users, searchTerm: \"\" };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ filteredUsers: this.context.users });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchTerm !== this.state.searchTerm) {\r\n      this.setState({\r\n        filteredUsers: this.context.users.filter((user) =>\r\n          user.name.includes(this.state.searchTerm)\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  searchChangeHandler = (event) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.finder}>\r\n          <input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />{\" \"}\r\n        </div>\r\n        <Users users={this.state.filteredUsers} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// const UserFinder = () => {\r\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     setFilteredUsers(\r\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n//     );\r\n//   }, [searchTerm]);\r\n\r\n//   const searchChangeHandler = (event) => {\r\n//     setSearchTerm(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <div className={classes.finder}>\r\n//         <input type=\"search\" onChange={searchChangeHandler} />{\" \"}\r\n//       </div>\r\n//       <Users users={filteredUsers} />\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\nexport default UserFinder;\r\n"]},"metadata":{},"sourceType":"module"}